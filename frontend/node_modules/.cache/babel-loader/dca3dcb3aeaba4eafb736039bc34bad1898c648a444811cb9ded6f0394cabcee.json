{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harsha\\\\Desktop\\\\freelancer\\\\frontend\\\\src\\\\pages\\\\PostJob.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport '../styles/jobs.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostJob = () => {\n  _s();\n  const [job, setJob] = useState({\n    title: '',\n    description: '',\n    location: '',\n    salary: ''\n  });\n  const navigate = useNavigate();\n  const handleChange = e => {\n    setJob({\n      ...job,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // ✅ FIXED endpoint — removed `/post`\n      await axios.post('http://localhost:3001/api/jobs', job);\n      alert('Job posted successfully!');\n      navigate(-1); // Go back\n    } catch (err) {\n      alert('Failed to post job');\n      console.error(err); // optional: for debugging\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Post a Job\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"title\",\n        placeholder: \"Job Title\",\n        value: job.title,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        placeholder: \"Job Description\",\n        value: job.description,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"location\",\n        placeholder: \"Location\",\n        value: job.location,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"salary\",\n        placeholder: \"Salary (optional)\",\n        value: job.salary,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Post Job\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back-btn\",\n      onClick: () => navigate(-1),\n      children: \"\\u2190 Previous Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(PostJob, \"eeKRUAnVjwY8oVX8exAeAQPENco=\", false, function () {\n  return [useNavigate];\n});\n_c = PostJob;\nexport default PostJob;\nvar _c;\n$RefreshReg$(_c, \"PostJob\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","PostJob","_s","job","setJob","title","description","location","salary","navigate","handleChange","e","target","name","value","handleSubmit","preventDefault","post","alert","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","onChange","required","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/harsha/Desktop/freelancer/frontend/src/pages/PostJob.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport '../styles/jobs.css';\r\n\r\nconst PostJob = () => {\r\n  const [job, setJob] = useState({\r\n    title: '',\r\n    description: '',\r\n    location: '',\r\n    salary: ''\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setJob({ ...job, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // ✅ FIXED endpoint — removed `/post`\r\n      await axios.post('http://localhost:3001/api/jobs', job);\r\n      alert('Job posted successfully!');\r\n      navigate(-1); // Go back\r\n    } catch (err) {\r\n      alert('Failed to post job');\r\n      console.error(err); // optional: for debugging\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Post a Job</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input name=\"title\" placeholder=\"Job Title\" value={job.title} onChange={handleChange} required />\r\n        <textarea name=\"description\" placeholder=\"Job Description\" value={job.description} onChange={handleChange} required />\r\n        <input name=\"location\" placeholder=\"Location\" value={job.location} onChange={handleChange} required />\r\n        <input name=\"salary\" placeholder=\"Salary (optional)\" value={job.salary} onChange={handleChange} />\r\n        <button type=\"submit\">Post Job</button>\r\n      </form>\r\n      <button className=\"back-btn\" onClick={() => navigate(-1)}>← Previous Page</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostJob;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}